/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.graphicstore.product.avro.schema;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Product extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6976480187904546148L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Product\",\"namespace\":\"com.graphicstore.product.avro.schema\",\"fields\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"category\",\"type\":{\"type\":\"enum\",\"name\":\"category_enum\",\"symbols\":[\"DIGITAL\",\"OFF_SET\",\"SUBLIMACAO\"]}},{\"name\":\"substrate\",\"type\":\"string\"},{\"name\":\"color\",\"type\":{\"type\":\"enum\",\"name\":\"color_enum\",\"symbols\":[\"_4x4\",\"_4x1\",\"_4x0\",\"_1x0\",\"_1x1\",\"_1x4\"]}},{\"name\":\"height\",\"type\":\"int\"},{\"name\":\"width\",\"type\":\"int\"},{\"name\":\"finishings\",\"type\":{\"type\":\"array\",\"items\":\"string\",\"default\":[]}},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"price\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":4,\"scale\":2}},{\"name\":\"created_at\",\"type\":{\"type\":\"long\",\"logicalType\":\"local-timestamp-millis\"}}],\"version\":1}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.LocalTimestampMillisConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<Product> ENCODER =
      new BinaryMessageEncoder<Product>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Product> DECODER =
      new BinaryMessageDecoder<Product>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Product> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Product> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Product> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Product>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Product to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Product from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Product instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Product fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private int id;
  private java.lang.CharSequence name;
  private com.graphicstore.product.avro.schema.category_enum category;
  private java.lang.CharSequence substrate;
  private com.graphicstore.product.avro.schema.color_enum color;
  private int height;
  private int width;
  private java.util.List<java.lang.CharSequence> finishings;
  private int quantity;
  private java.nio.ByteBuffer price;
  private java.time.LocalDateTime created_at;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Product() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param name The new value for name
   * @param category The new value for category
   * @param substrate The new value for substrate
   * @param color The new value for color
   * @param height The new value for height
   * @param width The new value for width
   * @param finishings The new value for finishings
   * @param quantity The new value for quantity
   * @param price The new value for price
   * @param created_at The new value for created_at
   */
  public Product(java.lang.Integer id, java.lang.CharSequence name, com.graphicstore.product.avro.schema.category_enum category, java.lang.CharSequence substrate, com.graphicstore.product.avro.schema.color_enum color, java.lang.Integer height, java.lang.Integer width, java.util.List<java.lang.CharSequence> finishings, java.lang.Integer quantity, java.nio.ByteBuffer price, java.time.LocalDateTime created_at) {
    this.id = id;
    this.name = name;
    this.category = category;
    this.substrate = substrate;
    this.color = color;
    this.height = height;
    this.width = width;
    this.finishings = finishings;
    this.quantity = quantity;
    this.price = price;
    this.created_at = created_at;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return category;
    case 3: return substrate;
    case 4: return color;
    case 5: return height;
    case 6: return width;
    case 7: return finishings;
    case 8: return quantity;
    case 9: return price;
    case 10: return created_at;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.LocalTimestampMillisConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: category = (com.graphicstore.product.avro.schema.category_enum)value$; break;
    case 3: substrate = (java.lang.CharSequence)value$; break;
    case 4: color = (com.graphicstore.product.avro.schema.color_enum)value$; break;
    case 5: height = (java.lang.Integer)value$; break;
    case 6: width = (java.lang.Integer)value$; break;
    case 7: finishings = (java.util.List<java.lang.CharSequence>)value$; break;
    case 8: quantity = (java.lang.Integer)value$; break;
    case 9: price = (java.nio.ByteBuffer)value$; break;
    case 10: created_at = (java.time.LocalDateTime)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public int getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(int value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'category' field.
   * @return The value of the 'category' field.
   */
  public com.graphicstore.product.avro.schema.category_enum getCategory() {
    return category;
  }


  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(com.graphicstore.product.avro.schema.category_enum value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'substrate' field.
   * @return The value of the 'substrate' field.
   */
  public java.lang.CharSequence getSubstrate() {
    return substrate;
  }


  /**
   * Sets the value of the 'substrate' field.
   * @param value the value to set.
   */
  public void setSubstrate(java.lang.CharSequence value) {
    this.substrate = value;
  }

  /**
   * Gets the value of the 'color' field.
   * @return The value of the 'color' field.
   */
  public com.graphicstore.product.avro.schema.color_enum getColor() {
    return color;
  }


  /**
   * Sets the value of the 'color' field.
   * @param value the value to set.
   */
  public void setColor(com.graphicstore.product.avro.schema.color_enum value) {
    this.color = value;
  }

  /**
   * Gets the value of the 'height' field.
   * @return The value of the 'height' field.
   */
  public int getHeight() {
    return height;
  }


  /**
   * Sets the value of the 'height' field.
   * @param value the value to set.
   */
  public void setHeight(int value) {
    this.height = value;
  }

  /**
   * Gets the value of the 'width' field.
   * @return The value of the 'width' field.
   */
  public int getWidth() {
    return width;
  }


  /**
   * Sets the value of the 'width' field.
   * @param value the value to set.
   */
  public void setWidth(int value) {
    this.width = value;
  }

  /**
   * Gets the value of the 'finishings' field.
   * @return The value of the 'finishings' field.
   */
  public java.util.List<java.lang.CharSequence> getFinishings() {
    return finishings;
  }


  /**
   * Sets the value of the 'finishings' field.
   * @param value the value to set.
   */
  public void setFinishings(java.util.List<java.lang.CharSequence> value) {
    this.finishings = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   * @return The value of the 'quantity' field.
   */
  public int getQuantity() {
    return quantity;
  }


  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(int value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'price' field.
   * @return The value of the 'price' field.
   */
  public java.nio.ByteBuffer getPrice() {
    return price;
  }


  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(java.nio.ByteBuffer value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'created_at' field.
   * @return The value of the 'created_at' field.
   */
  public java.time.LocalDateTime getCreatedAt() {
    return created_at;
  }


  /**
   * Sets the value of the 'created_at' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.time.LocalDateTime value) {
    this.created_at = value;
  }

  /**
   * Creates a new Product RecordBuilder.
   * @return A new Product RecordBuilder
   */
  public static com.graphicstore.product.avro.schema.Product.Builder newBuilder() {
    return new com.graphicstore.product.avro.schema.Product.Builder();
  }

  /**
   * Creates a new Product RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Product RecordBuilder
   */
  public static com.graphicstore.product.avro.schema.Product.Builder newBuilder(com.graphicstore.product.avro.schema.Product.Builder other) {
    if (other == null) {
      return new com.graphicstore.product.avro.schema.Product.Builder();
    } else {
      return new com.graphicstore.product.avro.schema.Product.Builder(other);
    }
  }

  /**
   * Creates a new Product RecordBuilder by copying an existing Product instance.
   * @param other The existing instance to copy.
   * @return A new Product RecordBuilder
   */
  public static com.graphicstore.product.avro.schema.Product.Builder newBuilder(com.graphicstore.product.avro.schema.Product other) {
    if (other == null) {
      return new com.graphicstore.product.avro.schema.Product.Builder();
    } else {
      return new com.graphicstore.product.avro.schema.Product.Builder(other);
    }
  }

  /**
   * RecordBuilder for Product instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Product>
    implements org.apache.avro.data.RecordBuilder<Product> {

    private int id;
    private java.lang.CharSequence name;
    private com.graphicstore.product.avro.schema.category_enum category;
    private java.lang.CharSequence substrate;
    private com.graphicstore.product.avro.schema.color_enum color;
    private int height;
    private int width;
    private java.util.List<java.lang.CharSequence> finishings;
    private int quantity;
    private java.nio.ByteBuffer price;
    private java.time.LocalDateTime created_at;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.graphicstore.product.avro.schema.Product.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.category)) {
        this.category = data().deepCopy(fields()[2].schema(), other.category);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.substrate)) {
        this.substrate = data().deepCopy(fields()[3].schema(), other.substrate);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.color)) {
        this.color = data().deepCopy(fields()[4].schema(), other.color);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.height)) {
        this.height = data().deepCopy(fields()[5].schema(), other.height);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.width)) {
        this.width = data().deepCopy(fields()[6].schema(), other.width);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.finishings)) {
        this.finishings = data().deepCopy(fields()[7].schema(), other.finishings);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.quantity)) {
        this.quantity = data().deepCopy(fields()[8].schema(), other.quantity);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.price)) {
        this.price = data().deepCopy(fields()[9].schema(), other.price);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.created_at)) {
        this.created_at = data().deepCopy(fields()[10].schema(), other.created_at);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
    }

    /**
     * Creates a Builder by copying an existing Product instance
     * @param other The existing instance to copy.
     */
    private Builder(com.graphicstore.product.avro.schema.Product other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.category)) {
        this.category = data().deepCopy(fields()[2].schema(), other.category);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.substrate)) {
        this.substrate = data().deepCopy(fields()[3].schema(), other.substrate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.color)) {
        this.color = data().deepCopy(fields()[4].schema(), other.color);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.height)) {
        this.height = data().deepCopy(fields()[5].schema(), other.height);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.width)) {
        this.width = data().deepCopy(fields()[6].schema(), other.width);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.finishings)) {
        this.finishings = data().deepCopy(fields()[7].schema(), other.finishings);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.quantity)) {
        this.quantity = data().deepCopy(fields()[8].schema(), other.quantity);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.price)) {
        this.price = data().deepCopy(fields()[9].schema(), other.price);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.created_at)) {
        this.created_at = data().deepCopy(fields()[10].schema(), other.created_at);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public int getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder setId(int value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'category' field.
      * @return The value.
      */
    public com.graphicstore.product.avro.schema.category_enum getCategory() {
      return category;
    }


    /**
      * Sets the value of the 'category' field.
      * @param value The value of 'category'.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder setCategory(com.graphicstore.product.avro.schema.category_enum value) {
      validate(fields()[2], value);
      this.category = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'category' field has been set.
      * @return True if the 'category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'category' field.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder clearCategory() {
      category = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'substrate' field.
      * @return The value.
      */
    public java.lang.CharSequence getSubstrate() {
      return substrate;
    }


    /**
      * Sets the value of the 'substrate' field.
      * @param value The value of 'substrate'.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder setSubstrate(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.substrate = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'substrate' field has been set.
      * @return True if the 'substrate' field has been set, false otherwise.
      */
    public boolean hasSubstrate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'substrate' field.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder clearSubstrate() {
      substrate = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'color' field.
      * @return The value.
      */
    public com.graphicstore.product.avro.schema.color_enum getColor() {
      return color;
    }


    /**
      * Sets the value of the 'color' field.
      * @param value The value of 'color'.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder setColor(com.graphicstore.product.avro.schema.color_enum value) {
      validate(fields()[4], value);
      this.color = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'color' field has been set.
      * @return True if the 'color' field has been set, false otherwise.
      */
    public boolean hasColor() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'color' field.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder clearColor() {
      color = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'height' field.
      * @return The value.
      */
    public int getHeight() {
      return height;
    }


    /**
      * Sets the value of the 'height' field.
      * @param value The value of 'height'.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder setHeight(int value) {
      validate(fields()[5], value);
      this.height = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'height' field has been set.
      * @return True if the 'height' field has been set, false otherwise.
      */
    public boolean hasHeight() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'height' field.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder clearHeight() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'width' field.
      * @return The value.
      */
    public int getWidth() {
      return width;
    }


    /**
      * Sets the value of the 'width' field.
      * @param value The value of 'width'.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder setWidth(int value) {
      validate(fields()[6], value);
      this.width = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'width' field has been set.
      * @return True if the 'width' field has been set, false otherwise.
      */
    public boolean hasWidth() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'width' field.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder clearWidth() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'finishings' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getFinishings() {
      return finishings;
    }


    /**
      * Sets the value of the 'finishings' field.
      * @param value The value of 'finishings'.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder setFinishings(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[7], value);
      this.finishings = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'finishings' field has been set.
      * @return True if the 'finishings' field has been set, false otherwise.
      */
    public boolean hasFinishings() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'finishings' field.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder clearFinishings() {
      finishings = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantity' field.
      * @return The value.
      */
    public int getQuantity() {
      return quantity;
    }


    /**
      * Sets the value of the 'quantity' field.
      * @param value The value of 'quantity'.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder setQuantity(int value) {
      validate(fields()[8], value);
      this.quantity = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'quantity' field has been set.
      * @return True if the 'quantity' field has been set, false otherwise.
      */
    public boolean hasQuantity() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'quantity' field.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder clearQuantity() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'price' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getPrice() {
      return price;
    }


    /**
      * Sets the value of the 'price' field.
      * @param value The value of 'price'.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder setPrice(java.nio.ByteBuffer value) {
      validate(fields()[9], value);
      this.price = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'price' field has been set.
      * @return True if the 'price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'price' field.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder clearPrice() {
      price = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'created_at' field.
      * @return The value.
      */
    public java.time.LocalDateTime getCreatedAt() {
      return created_at;
    }


    /**
      * Sets the value of the 'created_at' field.
      * @param value The value of 'created_at'.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder setCreatedAt(java.time.LocalDateTime value) {
      validate(fields()[10], value);
      this.created_at = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'created_at' field has been set.
      * @return True if the 'created_at' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'created_at' field.
      * @return This builder.
      */
    public com.graphicstore.product.avro.schema.Product.Builder clearCreatedAt() {
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Product build() {
      try {
        Product record = new Product();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.category = fieldSetFlags()[2] ? this.category : (com.graphicstore.product.avro.schema.category_enum) defaultValue(fields()[2]);
        record.substrate = fieldSetFlags()[3] ? this.substrate : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.color = fieldSetFlags()[4] ? this.color : (com.graphicstore.product.avro.schema.color_enum) defaultValue(fields()[4]);
        record.height = fieldSetFlags()[5] ? this.height : (java.lang.Integer) defaultValue(fields()[5]);
        record.width = fieldSetFlags()[6] ? this.width : (java.lang.Integer) defaultValue(fields()[6]);
        record.finishings = fieldSetFlags()[7] ? this.finishings : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[7]);
        record.quantity = fieldSetFlags()[8] ? this.quantity : (java.lang.Integer) defaultValue(fields()[8]);
        record.price = fieldSetFlags()[9] ? this.price : (java.nio.ByteBuffer) defaultValue(fields()[9]);
        record.created_at = fieldSetFlags()[10] ? this.created_at : (java.time.LocalDateTime) defaultValue(fields()[10]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Product>
    WRITER$ = (org.apache.avro.io.DatumWriter<Product>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Product>
    READER$ = (org.apache.avro.io.DatumReader<Product>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










